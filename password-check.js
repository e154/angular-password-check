// Generated by CoffeeScript 1.10.0

/** Copyright (C), DeltaSync Studios, 2010-2013. All rights reserved.
 * ------------------------------------------------------------------
 * File name:   password-check.js
 * Version:     v1.00
 * Created:     00:01 / 11.05.14
 * Author:      Delta54 <support@e154.ru>
 *
 * This file is part of the CMS engine (http://e154.ru/).
 *
 * Your use and or redistribution of this software in source and / or
 * binary form, with or without modification, is subject to: (i) your
 * ongoing acceptance of and compliance with the terms and conditions of
 * the DeltaSync License Agreement; and (ii) your inclusion of this notice
 * in any version of this software that you use or redistribute.
 * A copy of the DeltaSync License Agreement is available by contacting
 * DeltaSync Studios. at http://e154.ru/
 *
 * Description:
 * ------------------------------------------------------------------
 * History:
 *
 */

(function() {
  (function() {
    'use strict';
    var Pc;
    Pc = {
      name: 'Pc',
      version: '1.2',
      passConfHidden: false,
      password: '',
      init: function(options) {
        var confirmMeter, passwordConfirmRecommendation, passwordMeter;
        Pc.username = $(options.nickname);
        Pc.passwordInput = $(options.passwordInput);
        if (!Pc.passwordInput.length) {
          return;
        }
        Pc.confirmInput = $(options.confirmInput);
        if (!Pc.confirmInput.length) {
          return;
        }
        Pc.passwordRecommendation = $(options.passwordRecommendation);
        passwordConfirmRecommendation = $(options.passwordConfirmRecommendation);
        Pc.strengthRecommendation = $(options.strengthRecommendation);
        Pc.autoDisable = void 0 !== options.autoDisable ? options.autoDisable : true;
        Pc.submit = $(options.submitButton);
        if (Pc.autoDisable) {
          Pc.submit.disabled = true;
        }
        passwordMeter = '<div class="password-strength"><div class="password-strength-text" aria-live="assertive"></div><div class="password-strength-title">Надёжность пароля:</div><div class="password-indicator"><div class="indicator"></div></div></div>';
        confirmMeter = '<div class="password-confirm">Совпадение паролей: <span class="error">нет</span></div>';
        this.passwordRecommendation.html(passwordMeter);
        passwordConfirmRecommendation.html(confirmMeter);
        Pc.passConfMes = $('.password-confirm');
        Pc.strengthtext = this.passwordRecommendation.find('.password-strength-text');
        Pc.indicator = this.passwordRecommendation.find('.indicator');
        this.Pc();
        this.PcMatch();
        this.passwordInput.keyup(Pc.Pc).focus(Pc.Pc).blur(Pc.Pc);
        this.confirmInput.keyup(Pc.PcMatch).blur(Pc.PcMatch);
      },
      Pc: function() {
        var hasLowercase, hasNumbers, hasPunctuation, hasUppercase, msg, pass, strength, weaknesses;
        Pc.PcMatch();
        pass = Pc.password = Pc.passwordInput.val();
        weaknesses = 0;
        strength = 100;
        msg = [];
        hasLowercase = /[a-z]+/.test(pass);
        hasUppercase = /[A-Z]+/.test(pass);
        hasNumbers = /[0-9]+/.test(pass);
        hasPunctuation = /[^a-zA-Z0-9]+/.test(pass);
        if (pass.length < 6) {
          msg.push('Используйте не менее 6 знаков');
          strength -= (6 - pass.length) * 5 + 30;
        }
        if (!hasLowercase) {
          msg.push('Используйте знаки в нижнем регистре');
          weaknesses++;
        }
        if (!hasUppercase) {
          msg.push('Используйте знаки в верхнем регистре');
          weaknesses++;
        }
        if (!hasNumbers) {
          msg.push('Используйте цифры');
          weaknesses++;
        }
        if (!hasPunctuation) {
          msg.push('Используйте пунктуацию');
          weaknesses++;
        }
        if (Pc.username !== void 0) {
          if (pass !== '' && pass === Pc.username.val()) {
            msg.push('Пароль не должен совпадать с именем');
            strength = 5;
          }
        }
        switch (weaknesses) {
          case 1:
            strength -= 12.5;
            break;
          case 2:
            strength -= 25;
            break;
          case 3:
            strength -= 40;
            break;
          case 4:
            strength -= 40;
        }
        if (strength < 15) {
          Pc.strengthtext.html('');
        } else if (strength < 60) {
          Pc.strengthtext.html('Слабый');
        } else if (strength < 70) {
          Pc.strengthtext.html('Неплохой');
        } else if (strength < 80) {
          Pc.strengthtext.html('Хорошо');
        } else if (strength <= 100) {
          Pc.strengthtext.html('Сильный');
        }
        if (strength === 100) {
          Pc.strengthRecommendation.hide();
        } else {
          Pc.strengthRecommendation.show();
        }
        msg = '<fieldset><legend><span>Улучшение надёжности пароля:</span></legend><ul><li>' + msg.join('</li><li>') + '</li></ul></fieldset>';
        Pc.strengthRecommendation.html(msg);
        Pc.indicator.css({
          width: strength + '%'
        });
      },
      PcMatch: function() {
        if (Pc.confirmInput.val().length === 0) {
          if (Pc.passConfHidden === false) {
            Pc.passConfMes.css({
              visibility: 'hidden'
            });
            if (Pc.autoDisable) {
              Pc.submit.attr({
                disabled: true
              });
            }
            Pc.passConfHidden = true;
          }
          return;
        }
        Pc.passConfHidden = false;
        Pc.passConfMes.css({
          visibility: 'visible'
        });
        if (Pc.password === Pc.confirmInput.val()) {
          Pc.passConfMes.children('span').removeClass('error').addClass('ok').html('Да');
          if (Pc.autoDisable) {
            Pc.submit.attr({
              disabled: false
            });
          }
        } else {
          Pc.passConfMes.children('span').removeClass('ok').addClass('error').html('Нет');
          if (Pc.autoDisable) {
            Pc.submit.attr({
              disabled: true
            });
          }
        }
      }
    };
    angular.module('passwordCheck', []).directive('passwordCheck', function() {
      return {
        restrict: 'EA',
        link: function($scope, element, attrs) {
          var options, p;
          p = Pc;
          options = {
            'nickname': attrs.nickname,
            'passwordInput': attrs.passwordInput,
            'confirmInput': attrs.confirmInput,
            'passwordRecommendation': attrs.passwordRecommendation,
            'passwordConfirmRecommendation': attrs.passwordConfirmRecommendation,
            'strengthRecommendation': attrs.strengthRecommendation,
            'submitButton': attrs.submitButton,
            'autoDisable': attrs.autoDisable
          };
          p.init(options);
        }
      };
    });
  })();

}).call(this);

//# sourceMappingURL=password-check.js.map
